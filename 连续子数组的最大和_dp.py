"""
输入一个整型数组，数组中的一个或连续多个整数组成
一个子数组，求所有子数组的和的最大值
要求时间复杂度为O(n)

输入:nums = [-2,1,-3,4,-1,2,1,-5,4]
输出:6
解释:连续子数组[4,-1,2,1]的和最大 为6

1.重述问题: 求一个数组中 和最大的子数组
2.找到最后一步: 选择了某个数 作为子数组的最后一个数
3.选择了某个数 作为去了最后一个数的子数组的最后一个数
4.边界:到头的时候 时 return 0
"""
nums = eval(input())
n = len(nums)
ans = -101
f = [0 for i in range(10010)]

#在这里就不用考虑，下标小于0 的情况，因为遍历的开始就是0
for i in range(0,n):
    #如果nums[i] > f[i]+nums[i] 就选自己 使用局部最优推出整体最优
    f[i+1] = max(nums[i],f[i]+nums[i])
#如果偏移量越界，那么就偏移量加1，后面的枚举也是

#枚举
for j in range(1,n+1):
    ans = max(ans,f[j])
print(ans)
