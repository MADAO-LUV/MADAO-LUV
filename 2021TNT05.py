"""
密室逃脱游戏，有100间密室连在一排。密室编号是从1开始连续
排列一直排到第100间密室

游戏规则：
1.玩家初始位置在1号密室；
2.每次玩家可以进入右边的一个密室，也可以跳过一个密室进入下个密室
（如：当玩家当前在3号密室，他可以进入4号密室也可以进入5号密室）；
3.有毒的密室不能进入需要避开

斐波那契数列的演化
"""
x,y,m = map(int,input().split(","))
#x,y,m = int(x),int(y),int(m)

def find(x,y,m):
    #如果为有毒区，返回0，直接返回0
    if m == x or m == y:
        return 0
    #基本结束条件
    if m == 1 or m == 2:
        return 1
    res = find(x,y,m-1) + find(x,y,m-2)
    return res

res = find(x,y,m)
print(res)
"""
基本思路：利用递归实现斐波那契数列，再加一些判断条件以实现
将有毒区判断放在最前，是为了防止有毒区是2的时候，刚好和基本结束条件中的2重合了

得出最终值就是所有的线路结果

"""


#使用非递归 - 递推